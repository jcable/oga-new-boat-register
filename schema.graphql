type Query {
   greeting:String
   classes:[ClassOfBoat]
   boat(id:Int):Boat
   boats(page:Int, boatsPerPage:Int):BoatPages
   owners:[Owner]
   ownerships:[OwnerShip]
   ownershipsByBoat(id: ID!):[OwnerShip]
}

type Mutation {
   addBoat(name:String, class:String): Boat
}

type Boat {
   id:ID!
   sailarea:String
   draft:String
   depth:String
   draft_keel_down:String
   draft_keel_up:String
   length_on_waterline:String
   length_over_spars:String
   length_overall:String
   propellor_type:String
   rig_type:String
   hull_type:String
   construction_material:String
   engine_fuel:String
   engine_position:String
   engine_date:String
   engine_make:String
   engine_power:String
   hp:String
   moving_keel_type:String
   propellor_position:String
   spar_material:String
   home_country:String
   call_sign:String
   construction_method:String
   current_function:String
   fish_no:String
   for_sale:String
   home_port:String
   location:String
   more_info:String
   moving_keel:String
   moving_keel_weight:Int
   nhsr_no:String
   nsbr_no:String
   off_reg_no:String
   original_function:String
   other_registries:String
   ownerships_notes:String
   place_built:String
   port_reg:String
   prev_name:String
   previous_engine:String
   price:String
   propellor_blades:Int
   reference:String
   sail_no:String
   sale_text:String
   short_desc:String
   special_tag:String
   ssr_no:String
   oga_no:Int
   name:String
   image:String
   year:Int
   previousNames:String
   class:ClassOfBoat
   engineStatus:EngineStatus
   builder:Builder
   whereBuilt:String
   homePort:String
   currentOwnership:[OwnerShip]
}

type BoatSummary {
   id:ID!
   oga_no:Int
   name:String
   image:String
   year:Int
   class:ClassOfBoat
   builder:Builder
   whereBuilt:String
   homePort:String
}

type ClassOfBoat {
   id:ID!
   name:String
   rigType:RigType
   mainsailType:SailType
   designer:Designer
}

type BoatPages {
    # The total number of boats
    totalCount: Int!
    boats: [BoatSummary!]
    # Information for paginating this connection
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
}

type OwnerShip {
   owner:Owner
   sixtyFourths:Int
}

type Owner {
   id:ID!
   name:String
}

type Builder {
   id:ID!
   name:String
}

type Designer {
   id:ID!
   name:String
}

enum RigTypeOld {
   SLOOP,
   CUTTER,
   KETCH,
   YAWL
   SCHOONER
}

scalar RigType

enum SailType {
   BERMUDAN,
   GAFF,
   GUNTER,
   JUNK,
   LUG,
   LATEEN,
   SPRIT,
   SQUARE
}

enum EngineStatus { INBOARD, OUTBOARD, NONE }